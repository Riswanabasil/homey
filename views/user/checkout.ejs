<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="author" content="Untree.co">
    <link rel="shortcut icon" href="favicon.png">
    <meta name="description" content="" />
    <meta name="keywords" content="bootstrap, bootstrap4" />
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="/css/tiny-slider.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <title>Checkout</title>
</head>

<body>

    <nav class="custom-navbar navbar navbar-expand-md navbar-dark bg-dark" aria-label="Furni navigation bar">
        <div class="container">
            <a class="navbar-brand" href="/">Homey<span>.</span></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarsFurni" aria-controls="navbarsFurni" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarsFurni">
                <ul class="custom-navbar-nav navbar-nav ms-auto mb-2 mb-md-0">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li><a class="nav-link" href="/shop">All</a></li>
                    <li><a class="nav-link" href="/logout">Logout</a></li>
                    
                </ul>
                <ul class="custom-navbar-cta navbar-nav mb-2 mb-md-0 ms-5">
                    <li><a class="nav-link" href="/profile"><img src="/images/user.svg"></a></li>
                    <li><a class="nav-link" href="/cart"><img src="/images/cart.svg"></a></li>
                </ul>
            </div>
        </div>
    </nav>

            <div class="row">
                <div class="col-md-6 mb-5 mb-md-0">
                    <div class="p-3 p-lg-5 border bg-white">
                        <h2 class="h3 mb-3 text-black">Billing Details</h2>
                        <div class="form-group">
                            <label class="text-black">Add/Select address</label>
                            <button id="addAddressBtn" class="btn btn-primary mb-3">Add Address</button>
                        </div>
                        <div id="addAddressForm" style="display: none;">
                            <form action="/add-address?referrer=checkout" method="POST">
                                <div class="form-group row">
                                    <div class="col-md-6">
                                        <input type="text" placeholder="Name" name="name" class="form-control" required>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text" placeholder="City" name="city" class="form-control" required>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-6 mt-2">
                                        <input type="text" placeholder="Landmark" name="landMark" class="form-control" required>
                                    </div>
                                    <div class="col-md-6 mt-2">
                                        <input type="text" placeholder="State" name="state" class="form-control" required>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-6 mt-2">
                                        <input type="text" placeholder="Pincode" name="pincode" class="form-control" required>
                                    </div>
                                    <div class="col-md-6 mt-2">
                                        <input type="text" placeholder="Phone" name="phone" class="form-control" required>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary mt-2">Save Address</button>
                                    <button type="button" id="cancelAddAddress" class="btn btn-secondary mt-2">Cancel</button>
                                </div>
                            </form>
                        </div>
                        <form action="/place-order" id="placeOrderForm" method="POST">
                            <div class="form-group">
                                <% user.addresses.forEach((address, index) => { %>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="addressId" id="address<%= index %>" value="<%= address._id %>" <%= index === 0 ? 'checked' : '' %>>
                                        <label class="form-check-label" for="address<%= index %>">
                                            <%= address.name %><br> <%= address.city %><br> <%= address.landMark %><br> <%= address.state %>, <%= address.pincode %><br><%= address.phone %>
                                        </label>
                                        <a href="/edit-address1/<%= address._id %>" >Edit</a>
                                        
                                        <a href="#" onclick="deleteAddress('<%= address._id %>')" >Remove</a>
                                    </div>
                                <% }) %>
                            </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="p-3 p-lg-5 border bg-white">
                        <h2 class="h3 mb-3 text-black">Your Order</h2>
                        <table class="table site-block-order-table mb-5">
                            <thead>
                                <th>Product</th>
                                <th>Total</th>
                            </thead>
                            <tbody>
                                <% cart.forEach(item => { %>
                                    <tr>
                                        <td><%= item.productName %> <strong class="mx-2">x</strong> <%= item.quantity %></td>
                                        <td>₹<%= item.total %></td>
                                    </tr>
                                <% }) %>
                                <tr>
                                    <td class="text-black font-weight-bold"><strong>Cart Subtotal</strong></td>
                                    <td class="text-black">₹<%= subtotal %></td>
                                </tr>
                                <% if (discount > 0) { %>
                                    <tr>
                                        <td>Discount</td>
                                        <td class="text-black text-success">-₹<%= discount %></td>
                                    </tr>
                                    <% } %>
                                <tr>
                                    <td>Delivery Fee</td>
                                    <td>₹<%= deliveryFee %></td>
                                </tr>
                                <tr>
                                    <td class="text-black font-weight-bold"><strong>Order Total</strong></td>
                                    <td class="text-black font-weight-bold"><strong>₹<%= total %></strong></td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="form-group">
                            <label for="wallet-balance" class="text-black">Wallet Balance</label><br>
                            <p>Your available balance: ₹<%= user.wallet %></p>

                            <input type="checkbox" id="use-wallet" name="useWallet" value="true">
                                <label for="use-wallet">Use wallet balance</label><br>
                
                            <!-- <% if (user.wallet > 0) { %>
                                <input type="checkbox" id="use-wallet" name="useWallet" value="true">
                                <label for="use-wallet">Use wallet balance</label>
                            <% } else { %>
                                <p class="text-muted">You have no balance in your wallet.</p>
                            <% } %> -->
                            <!-- <label for="payment-method" class="text-black">Payment Method</label><br> -->
                            <input type="radio" id="cod" name="paymentMethod" value="COD" >
                            <label for="cod">Cash on Delivery</label><br>
                            <input type="radio" id="razorpay" name="paymentMethod" value="Razorpay" >
                            <label for="razorpay">Online payment</label>
                        </div>
                        <div class="form-group">
                            <button type="button" id="placeOrderButton" class="btn btn-black btn-lg py-3 btn-block mt-2">Place Order</button>
                        </div>
                    </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include('../../views/partials/user/footer') %>
    <script src="/js/bootstrap.bundle.min.js"></script>
    <script src="/js/tiny-slider.js"></script>
    <script src="/js/custom.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
    <script>

// document.getElementById('placeOrderForm').addEventListener('submit',async function(event) {
//     event.preventDefault();

//     const selectedAddress = document.querySelector('input[name="addressId"]:checked');

//     if (!selectedAddress) {
//         alert('Please select an address before placing your order.');
//         return; 
//     }
    
//     const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;

//     if (paymentMethod === 'Razorpay'){
//         try {
//             const response = await fetch('/create-razorpay-order', {
//                     method: 'POST',
//                     headers: {
//                         'Content-Type': 'application/json'
//                     },
//                     body: JSON.stringify({
//                         amount:`<%= total %>`
                        
//                     })
//                 });
//                 const order = await response.json();

//                if (!order.success) {
//                     alert('Failed to create Razorpay order');
//                    return;
//                 }
//                 const options = {
//                     "key": "<%= process.env.RAZORPAY_ID_KEY %>",
//                     "amount": order.amount,
//                     "currency": "INR",
//                     "name": "Homey",
//                     "description": "Order Payment",
//                     "order_id": order.id,
//                     "handler": function (response) {
                    
//                         fetch('/place-order', {
//                             method: 'POST',
//                             headers: {
//                                 'Content-Type': 'application/json'
//                             },
//                             body: JSON.stringify({
//                                 razorpay_payment_id: response.razorpay_payment_id,
//                                 razorpay_order_id: response.razorpay_order_id,
//                                 razorpay_signature: response.razorpay_signature,
//                                 addressId: document.querySelector('input[name="addressId"]:checked').value,
//                                 paymentMethod: 'Razorpay'
//                             })
//                         })
//                         .then(res => res.json())
//                         .then(data => {
//                             if (data.success) {
//                                 window.location.href = '/thankyou';
//                             } else {
//                                 alert('Payment failed, please try again.');
//                             }
//                         })
//                         .catch(err => console.error('Error:', err));
//                     },
//                     "prefill": {
//                         "name": "<%= user.name %>",
//                         "email": "<%= user.email %>",
//                         "contact": "<%= user.phone %>"
//                     },
//                     "theme": {
//                         "color": "#3399cc"
//                     }
//                 };

//                 const rzp1 = new Razorpay(options);
//                 rzp1.open();
//         } catch (error) {
//             console.error('Error creating Razorpay order:', error);
//         }
//     }else {
//             this.submit(); 
//         }

// });

document.addEventListener('DOMContentLoaded', function()  {
    const placeOrderButton = document.getElementById('placeOrderButton');
    placeOrderButton.addEventListener('click', function(event) {
    const useWallet = document.getElementById('use-wallet').checked;
    const walletAmount = `<%= user.wallet %>`;
    const total = `<%= total %>`;
    const paymentMethodInput = document.querySelector('input[name="paymentMethod"]:checked');
    const paymentMethod = paymentMethodInput ? paymentMethodInput.value : null;
    const addressId= document.querySelector('input[name="addressId"]:checked').value

    if (useWallet && walletAmount >= total) {
        processOrder({ useWallet: true, paymentMethod: 'Wallet', total: total,addressId });
    } else if (paymentMethod === 'Razorpay') {
        initiateRazorpay(total - (useWallet ? walletAmount : 0)); // Adjust the amount if wallet is used
    } else if (paymentMethod === 'COD') {
        processOrder({ useWallet: useWallet, paymentMethod: 'COD', total: total - (useWallet ? walletAmount : 0), addressId});
    } else {
        alert('Please select a payment method or use wallet balance.');
    }
});
})

function initiateRazorpay(amount) {
    fetch('/create-razorpay-order', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({ amount: amount })
    }).then(response => response.json())
      .then(data => {
        if (data.success) {
            const options = {
                "key": "<%= process.env.RAZORPAY_ID_KEY %>",
                "amount": data.amount,
                "order_id": data.id,
                "name": "Your Company Name",
                "description": "Payment for Order",
                "handler": function(response) {
                    processOrder({
                        useWallet: document.getElementById('use-wallet').checked,
                        paymentMethod: 'Razorpay',
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_signature: response.razorpay_signature,
                        addressId: document.querySelector('input[name="addressId"]:checked').value,
                        total: amount
                    });
                },
                "prefill": {
                    "name": "<%= user.name %>",
                    "email": "<%= user.email %>",
                    "contact": "<%= user.phone %>"
                },
                "theme": {
                    "color": "#3399cc"
                }
            };
            var rzp1 = new Razorpay(options);
            rzp1.open();
        } else {
            alert('Failed to initiate payment process. Please try again.');
        }
    }).catch(error => console.error('Error initiating Razorpay:', error));
}

function processOrder(data) {
    fetch('/place-order', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(data)
    }).then(response => response.json())
      .then(data => {
        if (data.success) {
            window.location.href = '/thankyou';
        } else {
            alert('Order processing failed, please try again.');
        }
    }).catch(error => {
        console.error('Error processing order:', error);
        alert('An error occurred, please try again.');
    });
}

function deleteAddress(addressId) {
    if (confirm('Are you sure you want to remove this address?')) {
        // Perform the delete action, e.g., making an AJAX call to remove the address
        fetch(`/delete-address/${addressId}`, {
            method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Address removed successfully.');
                // Optionally, remove the address element from the DOM
                document.getElementById(`address${addressId}`).closest('.form-check').remove();
            } else {
                alert('Failed to remove address.');
            }
        })
        .catch(error => {
            console.error('Error removing address:', error);
            alert('An error occurred. Please try again.');
        });
    }
}



    </script>
    <script>
        document.getElementById('addAddressBtn').addEventListener('click', function () {
            document.getElementById('addAddressForm').style.display = 'block';
        });

        document.getElementById('cancelAddAddress').addEventListener('click', function () {
            document.getElementById('addAddressForm').style.display = 'none';
        });

        function deleteAddress(addressId) {
            fetch(`/delete-address/${addressId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to delete address');
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        
    </script>
</body>

</html>
